@using Microsoft.AspNetCore.Components
@using Microsoft.JSInterop
@using UserAuthentication
@using Microsoft.AspNetCore.Components.Routing
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject ILogin LoginService

@**@
<div class="navigation-buttons">
    <NavLink href="/shopping-list" class="btn-navigation" activeClass="active">Shopping List</NavLink>
    <NavLink href="/task-manager" class="btn-navigation" activeClass="active">Task Manager</NavLink>
    <NavLink href="/wishlist" class="btn-navigation btn-wishlist" activeClass="active">Wish List</NavLink>
    @* <button class="btn btn-danger" @onclick="HandleLogout">Logout</button> *@
</div>

@code {
    private async Task HandleLogout()
    {
        try
        {
            Console.WriteLine("HandleLogout method invoked.");

            // Remove authentication tokens from localStorage
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "username");
            await JSRuntime.InvokeVoidAsync("localStorage.removeItem", "isAuthenticated");

            // Navigate to the login page and force a full page reload
            NavigationManager.NavigateTo("/login", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Logout failed: {ex.Message}");
            // Optionally, display an error message to the user
            await JSRuntime.InvokeVoidAsync("alert", "Failed to logout. Please try again.");
        }
    }
}
